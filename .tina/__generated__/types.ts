//@ts-nocheck
// DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
import { gql } from 'tinacms';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  sys?: Maybe<SystemInfo>;
  id: Scalars['ID'];
  form: Scalars['JSON'];
  values: Scalars['JSON'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Int'];
};

export type Query = {
  __typename?: 'Query';
  getCollection: Collection;
  getCollections: Array<Collection>;
  node: Node;
  getDocument: DocumentNode;
  getDocumentList: DocumentConnection;
  getDocumentFields: Scalars['JSON'];
  getGlobalDocument: GlobalDocument;
  getGlobalList: GlobalConnection;
  getModifierDocument: ModifierDocument;
  getModifierList: ModifierConnection;
  getMenuDocument: MenuDocument;
  getMenuList: MenuConnection;
  getPostsDocument: PostsDocument;
  getPostsList: PostsConnection;
};


export type QueryGetCollectionArgs = {
  collection?: InputMaybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']>;
};


export type QueryGetDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetDocumentListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  last?: InputMaybe<Scalars['Int']>;
};


export type QueryGetGlobalDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetGlobalListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  last?: InputMaybe<Scalars['Int']>;
};


export type QueryGetModifierDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetModifierListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  last?: InputMaybe<Scalars['Int']>;
};


export type QueryGetMenuDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetMenuListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  last?: InputMaybe<Scalars['Int']>;
};


export type QueryGetPostsDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetPostsListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  last?: InputMaybe<Scalars['Int']>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Int'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label: Scalars['String'];
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  last?: InputMaybe<Scalars['Int']>;
};

export type DocumentNode = GlobalDocument | ModifierDocument | MenuDocument | PostsDocument;

export type GlobalHeaderIcon = {
  __typename?: 'GlobalHeaderIcon';
  color?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type GlobalHeaderNav = {
  __typename?: 'GlobalHeaderNav';
  href?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
};

export type GlobalHeader = {
  __typename?: 'GlobalHeader';
  icon?: Maybe<GlobalHeaderIcon>;
  color?: Maybe<Scalars['String']>;
  nav?: Maybe<Array<Maybe<GlobalHeaderNav>>>;
};

export type GlobalFooterSocial = {
  __typename?: 'GlobalFooterSocial';
  facebook?: Maybe<Scalars['String']>;
  twitter?: Maybe<Scalars['String']>;
  instagram?: Maybe<Scalars['String']>;
  github?: Maybe<Scalars['String']>;
};

export type GlobalFooter = {
  __typename?: 'GlobalFooter';
  color?: Maybe<Scalars['String']>;
  social?: Maybe<GlobalFooterSocial>;
};

export type GlobalTheme = {
  __typename?: 'GlobalTheme';
  color?: Maybe<Scalars['String']>;
  font?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  darkMode?: Maybe<Scalars['String']>;
};

export type Global = {
  __typename?: 'Global';
  header?: Maybe<GlobalHeader>;
  footer?: Maybe<GlobalFooter>;
  theme?: Maybe<GlobalTheme>;
};

export type GlobalDocument = Node & Document & {
  __typename?: 'GlobalDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Global;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type GlobalConnectionEdges = {
  __typename?: 'GlobalConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<GlobalDocument>;
};

export type GlobalConnection = Connection & {
  __typename?: 'GlobalConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Int'];
  edges?: Maybe<Array<Maybe<GlobalConnectionEdges>>>;
};

export type Modifier = {
  __typename?: 'Modifier';
  name?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
};

export type ModifierDocument = Node & Document & {
  __typename?: 'ModifierDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Modifier;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type ModifierConnectionEdges = {
  __typename?: 'ModifierConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<ModifierDocument>;
};

export type ModifierConnection = Connection & {
  __typename?: 'ModifierConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Int'];
  edges?: Maybe<Array<Maybe<ModifierConnectionEdges>>>;
};

export type MenuSectionItemModifierDocument = ModifierDocument;

export type MenuSectionItem = {
  __typename?: 'MenuSectionItem';
  name?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  modifier?: Maybe<MenuSectionItemModifierDocument>;
  dietary?: Maybe<Array<Maybe<Scalars['String']>>>;
  available?: Maybe<Scalars['Boolean']>;
};

export type MenuSection = {
  __typename?: 'MenuSection';
  name?: Maybe<Scalars['String']>;
  item?: Maybe<MenuSectionItem>;
};

export type Menu = {
  __typename?: 'Menu';
  name?: Maybe<Scalars['String']>;
  section?: Maybe<Array<Maybe<MenuSection>>>;
};

export type MenuDocument = Node & Document & {
  __typename?: 'MenuDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Menu;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type MenuConnectionEdges = {
  __typename?: 'MenuConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<MenuDocument>;
};

export type MenuConnection = Connection & {
  __typename?: 'MenuConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Int'];
  edges?: Maybe<Array<Maybe<MenuConnectionEdges>>>;
};

export type Posts = {
  __typename?: 'Posts';
  title?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['String']>;
};

export type PostsDocument = Node & Document & {
  __typename?: 'PostsDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Posts;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type PostsConnectionEdges = {
  __typename?: 'PostsConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<PostsDocument>;
};

export type PostsConnection = Connection & {
  __typename?: 'PostsConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Int'];
  edges?: Maybe<Array<Maybe<PostsConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  createDocument: DocumentNode;
  updateGlobalDocument: GlobalDocument;
  createGlobalDocument: GlobalDocument;
  updateModifierDocument: ModifierDocument;
  createModifierDocument: ModifierDocument;
  updateMenuDocument: MenuDocument;
  createMenuDocument: MenuDocument;
  updatePostsDocument: PostsDocument;
  createPostsDocument: PostsDocument;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: InputMaybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdateGlobalDocumentArgs = {
  relativePath: Scalars['String'];
  params: GlobalMutation;
};


export type MutationCreateGlobalDocumentArgs = {
  relativePath: Scalars['String'];
  params: GlobalMutation;
};


export type MutationUpdateModifierDocumentArgs = {
  relativePath: Scalars['String'];
  params: ModifierMutation;
};


export type MutationCreateModifierDocumentArgs = {
  relativePath: Scalars['String'];
  params: ModifierMutation;
};


export type MutationUpdateMenuDocumentArgs = {
  relativePath: Scalars['String'];
  params: MenuMutation;
};


export type MutationCreateMenuDocumentArgs = {
  relativePath: Scalars['String'];
  params: MenuMutation;
};


export type MutationUpdatePostsDocumentArgs = {
  relativePath: Scalars['String'];
  params: PostsMutation;
};


export type MutationCreatePostsDocumentArgs = {
  relativePath: Scalars['String'];
  params: PostsMutation;
};

export type DocumentMutation = {
  global?: InputMaybe<GlobalMutation>;
  modifier?: InputMaybe<ModifierMutation>;
  menu?: InputMaybe<MenuMutation>;
  posts?: InputMaybe<PostsMutation>;
};

export type GlobalHeaderIconMutation = {
  color?: InputMaybe<Scalars['String']>;
  style?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type GlobalHeaderNavMutation = {
  href?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
};

export type GlobalHeaderMutation = {
  icon?: InputMaybe<GlobalHeaderIconMutation>;
  color?: InputMaybe<Scalars['String']>;
  nav?: InputMaybe<Array<InputMaybe<GlobalHeaderNavMutation>>>;
};

export type GlobalFooterSocialMutation = {
  facebook?: InputMaybe<Scalars['String']>;
  twitter?: InputMaybe<Scalars['String']>;
  instagram?: InputMaybe<Scalars['String']>;
  github?: InputMaybe<Scalars['String']>;
};

export type GlobalFooterMutation = {
  color?: InputMaybe<Scalars['String']>;
  social?: InputMaybe<GlobalFooterSocialMutation>;
};

export type GlobalThemeMutation = {
  color?: InputMaybe<Scalars['String']>;
  font?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  darkMode?: InputMaybe<Scalars['String']>;
};

export type GlobalMutation = {
  header?: InputMaybe<GlobalHeaderMutation>;
  footer?: InputMaybe<GlobalFooterMutation>;
  theme?: InputMaybe<GlobalThemeMutation>;
};

export type ModifierMutation = {
  name?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Int']>;
};

export type MenuSectionItemMutation = {
  name?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Int']>;
  modifier?: InputMaybe<Scalars['String']>;
  dietary?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  available?: InputMaybe<Scalars['Boolean']>;
};

export type MenuSectionMutation = {
  name?: InputMaybe<Scalars['String']>;
  item?: InputMaybe<MenuSectionItemMutation>;
};

export type MenuMutation = {
  name?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<MenuSectionMutation>>>;
};

export type PostsMutation = {
  title?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['String']>;
};

export type GlobalPartsFragment = { __typename?: 'Global', header?: { __typename: 'GlobalHeader', color?: string | null | undefined, icon?: { __typename: 'GlobalHeaderIcon', color?: string | null | undefined, style?: string | null | undefined, name?: string | null | undefined } | null | undefined, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null | undefined, label?: string | null | undefined } | null | undefined> | null | undefined } | null | undefined, footer?: { __typename: 'GlobalFooter', color?: string | null | undefined, social?: { __typename: 'GlobalFooterSocial', facebook?: string | null | undefined, twitter?: string | null | undefined, instagram?: string | null | undefined, github?: string | null | undefined } | null | undefined } | null | undefined, theme?: { __typename: 'GlobalTheme', color?: string | null | undefined, font?: string | null | undefined, icon?: string | null | undefined, darkMode?: string | null | undefined } | null | undefined };

export type ModifierPartsFragment = { __typename?: 'Modifier', name?: string | null | undefined, price?: number | null | undefined };

export type MenuPartsFragment = { __typename?: 'Menu', name?: string | null | undefined, section?: Array<{ __typename: 'MenuSection', name?: string | null | undefined, item?: { __typename: 'MenuSectionItem', name?: string | null | undefined, description?: string | null | undefined, price?: number | null | undefined, dietary?: Array<string | null | undefined> | null | undefined, available?: boolean | null | undefined, modifier?: { __typename?: 'ModifierDocument', id: string } | null | undefined } | null | undefined } | null | undefined> | null | undefined };

export type PostsPartsFragment = { __typename?: 'Posts', title?: string | null | undefined, body?: string | null | undefined };

export type GetGlobalDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetGlobalDocumentQuery = { __typename?: 'Query', getGlobalDocument: { __typename?: 'GlobalDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Global', header?: { __typename: 'GlobalHeader', color?: string | null | undefined, icon?: { __typename: 'GlobalHeaderIcon', color?: string | null | undefined, style?: string | null | undefined, name?: string | null | undefined } | null | undefined, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null | undefined, label?: string | null | undefined } | null | undefined> | null | undefined } | null | undefined, footer?: { __typename: 'GlobalFooter', color?: string | null | undefined, social?: { __typename: 'GlobalFooterSocial', facebook?: string | null | undefined, twitter?: string | null | undefined, instagram?: string | null | undefined, github?: string | null | undefined } | null | undefined } | null | undefined, theme?: { __typename: 'GlobalTheme', color?: string | null | undefined, font?: string | null | undefined, icon?: string | null | undefined, darkMode?: string | null | undefined } | null | undefined } } };

export type GetGlobalListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetGlobalListQuery = { __typename?: 'Query', getGlobalList: { __typename?: 'GlobalConnection', totalCount: number, edges?: Array<{ __typename?: 'GlobalConnectionEdges', node?: { __typename?: 'GlobalDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Global', header?: { __typename: 'GlobalHeader', color?: string | null | undefined, icon?: { __typename: 'GlobalHeaderIcon', color?: string | null | undefined, style?: string | null | undefined, name?: string | null | undefined } | null | undefined, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null | undefined, label?: string | null | undefined } | null | undefined> | null | undefined } | null | undefined, footer?: { __typename: 'GlobalFooter', color?: string | null | undefined, social?: { __typename: 'GlobalFooterSocial', facebook?: string | null | undefined, twitter?: string | null | undefined, instagram?: string | null | undefined, github?: string | null | undefined } | null | undefined } | null | undefined, theme?: { __typename: 'GlobalTheme', color?: string | null | undefined, font?: string | null | undefined, icon?: string | null | undefined, darkMode?: string | null | undefined } | null | undefined } } | null | undefined } | null | undefined> | null | undefined } };

export type GetModifierDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetModifierDocumentQuery = { __typename?: 'Query', getModifierDocument: { __typename?: 'ModifierDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Modifier', name?: string | null | undefined, price?: number | null | undefined } } };

export type GetModifierListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetModifierListQuery = { __typename?: 'Query', getModifierList: { __typename?: 'ModifierConnection', totalCount: number, edges?: Array<{ __typename?: 'ModifierConnectionEdges', node?: { __typename?: 'ModifierDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Modifier', name?: string | null | undefined, price?: number | null | undefined } } | null | undefined } | null | undefined> | null | undefined } };

export type GetMenuDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetMenuDocumentQuery = { __typename?: 'Query', getMenuDocument: { __typename?: 'MenuDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Menu', name?: string | null | undefined, section?: Array<{ __typename: 'MenuSection', name?: string | null | undefined, item?: { __typename: 'MenuSectionItem', name?: string | null | undefined, description?: string | null | undefined, price?: number | null | undefined, dietary?: Array<string | null | undefined> | null | undefined, available?: boolean | null | undefined, modifier?: { __typename?: 'ModifierDocument', id: string } | null | undefined } | null | undefined } | null | undefined> | null | undefined } } };

export type GetMenuListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetMenuListQuery = { __typename?: 'Query', getMenuList: { __typename?: 'MenuConnection', totalCount: number, edges?: Array<{ __typename?: 'MenuConnectionEdges', node?: { __typename?: 'MenuDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Menu', name?: string | null | undefined, section?: Array<{ __typename: 'MenuSection', name?: string | null | undefined, item?: { __typename: 'MenuSectionItem', name?: string | null | undefined, description?: string | null | undefined, price?: number | null | undefined, dietary?: Array<string | null | undefined> | null | undefined, available?: boolean | null | undefined, modifier?: { __typename?: 'ModifierDocument', id: string } | null | undefined } | null | undefined } | null | undefined> | null | undefined } } | null | undefined } | null | undefined> | null | undefined } };

export type GetPostsDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetPostsDocumentQuery = { __typename?: 'Query', getPostsDocument: { __typename?: 'PostsDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Posts', title?: string | null | undefined, body?: string | null | undefined } } };

export type GetPostsListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetPostsListQuery = { __typename?: 'Query', getPostsList: { __typename?: 'PostsConnection', totalCount: number, edges?: Array<{ __typename?: 'PostsConnectionEdges', node?: { __typename?: 'PostsDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Posts', title?: string | null | undefined, body?: string | null | undefined } } | null | undefined } | null | undefined> | null | undefined } };

export const GlobalPartsFragmentDoc = gql`
    fragment GlobalParts on Global {
  header {
    __typename
    icon {
      __typename
      color
      style
      name
    }
    color
    nav {
      __typename
      href
      label
    }
  }
  footer {
    __typename
    color
    social {
      __typename
      facebook
      twitter
      instagram
      github
    }
  }
  theme {
    __typename
    color
    font
    icon
    darkMode
  }
}
    `;
export const ModifierPartsFragmentDoc = gql`
    fragment ModifierParts on Modifier {
  name
  price
}
    `;
export const MenuPartsFragmentDoc = gql`
    fragment MenuParts on Menu {
  name
  section {
    __typename
    name
    item {
      __typename
      name
      description
      price
      modifier {
        ... on Document {
          id
        }
      }
      dietary
      available
    }
  }
}
    `;
export const PostsPartsFragmentDoc = gql`
    fragment PostsParts on Posts {
  title
  body
}
    `;
export const GetGlobalDocumentDocument = gql`
    query getGlobalDocument($relativePath: String!) {
  getGlobalDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...GlobalParts
    }
  }
}
    ${GlobalPartsFragmentDoc}`;
export const GetGlobalListDocument = gql`
    query getGlobalList {
  getGlobalList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...GlobalParts
        }
      }
    }
  }
}
    ${GlobalPartsFragmentDoc}`;
export const GetModifierDocumentDocument = gql`
    query getModifierDocument($relativePath: String!) {
  getModifierDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...ModifierParts
    }
  }
}
    ${ModifierPartsFragmentDoc}`;
export const GetModifierListDocument = gql`
    query getModifierList {
  getModifierList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...ModifierParts
        }
      }
    }
  }
}
    ${ModifierPartsFragmentDoc}`;
export const GetMenuDocumentDocument = gql`
    query getMenuDocument($relativePath: String!) {
  getMenuDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...MenuParts
    }
  }
}
    ${MenuPartsFragmentDoc}`;
export const GetMenuListDocument = gql`
    query getMenuList {
  getMenuList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...MenuParts
        }
      }
    }
  }
}
    ${MenuPartsFragmentDoc}`;
export const GetPostsDocumentDocument = gql`
    query getPostsDocument($relativePath: String!) {
  getPostsDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...PostsParts
    }
  }
}
    ${PostsPartsFragmentDoc}`;
export const GetPostsListDocument = gql`
    query getPostsList {
  getPostsList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...PostsParts
        }
      }
    }
  }
}
    ${PostsPartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      getGlobalDocument(variables: GetGlobalDocumentQueryVariables, options?: C): Promise<{data: GetGlobalDocumentQuery, variables: GetGlobalDocumentQueryVariables, query: string}> {
        return requester<{data: GetGlobalDocumentQuery, variables: GetGlobalDocumentQueryVariables, query: string}, GetGlobalDocumentQueryVariables>(GetGlobalDocumentDocument, variables, options);
      },
    getGlobalList(variables?: GetGlobalListQueryVariables, options?: C): Promise<{data: GetGlobalListQuery, variables: GetGlobalListQueryVariables, query: string}> {
        return requester<{data: GetGlobalListQuery, variables: GetGlobalListQueryVariables, query: string}, GetGlobalListQueryVariables>(GetGlobalListDocument, variables, options);
      },
    getModifierDocument(variables: GetModifierDocumentQueryVariables, options?: C): Promise<{data: GetModifierDocumentQuery, variables: GetModifierDocumentQueryVariables, query: string}> {
        return requester<{data: GetModifierDocumentQuery, variables: GetModifierDocumentQueryVariables, query: string}, GetModifierDocumentQueryVariables>(GetModifierDocumentDocument, variables, options);
      },
    getModifierList(variables?: GetModifierListQueryVariables, options?: C): Promise<{data: GetModifierListQuery, variables: GetModifierListQueryVariables, query: string}> {
        return requester<{data: GetModifierListQuery, variables: GetModifierListQueryVariables, query: string}, GetModifierListQueryVariables>(GetModifierListDocument, variables, options);
      },
    getMenuDocument(variables: GetMenuDocumentQueryVariables, options?: C): Promise<{data: GetMenuDocumentQuery, variables: GetMenuDocumentQueryVariables, query: string}> {
        return requester<{data: GetMenuDocumentQuery, variables: GetMenuDocumentQueryVariables, query: string}, GetMenuDocumentQueryVariables>(GetMenuDocumentDocument, variables, options);
      },
    getMenuList(variables?: GetMenuListQueryVariables, options?: C): Promise<{data: GetMenuListQuery, variables: GetMenuListQueryVariables, query: string}> {
        return requester<{data: GetMenuListQuery, variables: GetMenuListQueryVariables, query: string}, GetMenuListQueryVariables>(GetMenuListDocument, variables, options);
      },
    getPostsDocument(variables: GetPostsDocumentQueryVariables, options?: C): Promise<{data: GetPostsDocumentQuery, variables: GetPostsDocumentQueryVariables, query: string}> {
        return requester<{data: GetPostsDocumentQuery, variables: GetPostsDocumentQueryVariables, query: string}, GetPostsDocumentQueryVariables>(GetPostsDocumentDocument, variables, options);
      },
    getPostsList(variables?: GetPostsListQueryVariables, options?: C): Promise<{data: GetPostsListQuery, variables: GetPostsListQueryVariables, query: string}> {
        return requester<{data: GetPostsListQuery, variables: GetPostsListQueryVariables, query: string}, GetPostsListQueryVariables>(GetPostsListDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { getStaticPropsForTina } from 'tinacms'
const requester: (doc: any, vars?: any, options?: any) => Promise<any> = async (
  doc,
  vars,
  _options
) => {
  // const data = await tinaClient.request(doc, { variables: vars }); 
  const res = await await getStaticPropsForTina({query: doc, variables: vars})
  return res
};

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = ()=>getSdk(requester)

